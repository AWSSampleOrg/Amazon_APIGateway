AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: API Gateway Mock
Parameters:
  ProjectPrefix:
    Type: String
    Default: ""

  APIGatewayStageName:
    Type: String
    AllowedValues:
      - test
      - prod

Resources:
  #-------------------------------------------------------
  # API Gateway
  #-------------------------------------------------------
  APIGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub ${ProjectPrefix}rest_api

  APIGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref APIGatewayRestApi
      ParentId: !GetAtt APIGatewayRestApi.RootResourceId
      PathPart: mock_test

  APIGatewayPostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        Type: MOCK
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: 200
            ResponseTemplates:
              application/json: |-
                {
                  "Method" : "POST",
                  "name" : "Hello world",
                  "age" : 100
                }
        PassthroughBehavior: WHEN_NO_TEMPLATES
        RequestTemplates:
          application/json: |-
            {
              "statusCode" : 200,
              "message" : "Post test"
            }
      MethodResponses:
        - StatusCode: 200
      ResourceId: !Ref APIGatewayResource
      RestApiId: !Ref APIGatewayRestApi

  APIGatewayGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Type: MOCK
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: 200
            ResponseTemplates:
              application/json: |-
                {
                  "Method" : "GET",
                  "name" : "Hello world",
                  "age" : 100
                }
        PassthroughBehavior: WHEN_NO_TEMPLATES
        RequestTemplates:
          application/json: |-
            {
              "statusCode" : 200,
              "message" : "Get test"
            }
      MethodResponses:
        - StatusCode: 200
      ResourceId: !Ref APIGatewayResource
      RestApiId: !Ref APIGatewayRestApi

  APIGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - APIGatewayGetMethod
      - APIGatewayPostMethod
    Properties:
      RestApiId: !Ref APIGatewayRestApi
      StageName: !Sub ${APIGatewayStageName}
      StageDescription:
        # https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#context-variable-reference?cmpid=docs_apigateway_console
        AccessLogSetting:
          DestinationArn: !Sub ${APIGatewayAccessLogGroup.Arn}
          Format: '{ "requestId":"$context.requestId", "extendedRequestId":"$context.extendedRequestId", "ip": "$context.identity.sourceIp", "caller":"$context.identity.caller", "user":"$context.identity.user", "requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod", "resourcePath":"$context.resourcePath", "status":"$context.status", "protocol":"$context.protocol", "responseLength":"$context.responseLength" }'
        # CloudWatch Logs
        DataTraceEnabled: true
        LoggingLevel: INFO
        MetricsEnabled: true
        TracingEnabled: true
